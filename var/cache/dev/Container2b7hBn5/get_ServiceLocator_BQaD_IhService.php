<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private '.service_locator.bQaD.ih' shared service.

return $this->privates['.service_locator.bQaD.ih'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'addressRepository' => ['privates', 'Main\\UserBundle\\Repository\\AddressRepository', 'getAddressRepositoryService.php', true],
    'authorizationChecker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
    'bankAccountRepository' => ['privates', 'Main\\UserBundle\\Repository\\BankAccountRepository', 'getBankAccountRepositoryService.php', true],
    'damageMediaRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\DamageMediaRepository', 'getDamageMediaRepositoryService.php', true],
    'damageRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\DamageRepository', 'getDamageRepositoryService.php', true],
    'documentRepository' => ['privates', 'AppBundle\\Repository\\DocumentRepository', 'getDocumentRepositoryService.php', true],
    'documentTypeRepository' => ['privates', 'AppBundle\\Repository\\DocumentTypeRepository', 'getDocumentTypeRepositoryService.php', true],
    'logger' => ['privates', 'monolog.logger', 'getMonolog_LoggerService', false],
    'mediaRepository' => ['privates', 'AppBundle\\Repository\\MediaRepository', 'getMediaRepositoryService.php', true],
    'mediaTypeRepository' => ['privates', 'AppBundle\\Repository\\MediaTypeRepository', 'getMediaTypeRepositoryService.php', true],
    'typeRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\TypeRepository', 'getTypeRepositoryService.php', true],
    'userRepository' => ['privates', 'Main\\UserBundle\\Repository\\UserRepository', 'getUserRepositoryService.php', true],
]);
