<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'test.private_services_locator' shared service.

return $this->services['test.private_services_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'AppBundle\\Form\\Message\\EditMessageFormType' => ['privates', 'AppBundle\\Form\\Message\\EditMessageFormType', 'getEditMessageFormTypeService.php', true],
    'AppBundle\\Form\\Project\\EditProjectFormType' => ['privates', 'AppBundle\\Form\\Project\\EditProjectFormType', 'getEditProjectFormTypeService.php', true],
    'AppBundle\\Form\\TypeExtension\\HelpFormExtension' => ['privates', 'AppBundle\\Form\\TypeExtension\\HelpFormExtension', 'getHelpFormExtensionService.php', true],
    'AppBundle\\Form\\Type\\TagFormType' => ['privates', 'AppBundle\\Form\\Type\\TagFormType', 'getTagFormTypeService.php', true],
    'AppBundle\\Repository\\DocumentRepository' => ['privates', 'AppBundle\\Repository\\DocumentRepository', 'getDocumentRepositoryService.php', true],
    'AppBundle\\Repository\\DocumentTypeRepository' => ['privates', 'AppBundle\\Repository\\DocumentTypeRepository', 'getDocumentTypeRepositoryService.php', true],
    'AppBundle\\Repository\\FaqQuestionRepository' => ['privates', 'AppBundle\\Repository\\FaqQuestionRepository', 'getFaqQuestionRepositoryService.php', true],
    'AppBundle\\Repository\\MediaRepository' => ['privates', 'AppBundle\\Repository\\MediaRepository', 'getMediaRepositoryService.php', true],
    'AppBundle\\Repository\\MediaTypeRepository' => ['privates', 'AppBundle\\Repository\\MediaTypeRepository', 'getMediaTypeRepositoryService.php', true],
    'AppBundle\\Repository\\MessageRepository' => ['privates', 'AppBundle\\Repository\\MessageRepository', 'getMessageRepositoryService.php', true],
    'AppBundle\\Repository\\MessageTypeRepository' => ['privates', 'AppBundle\\Repository\\MessageTypeRepository', 'getMessageTypeRepositoryService.php', true],
    'AppBundle\\Repository\\ProjectRepository' => ['privates', 'AppBundle\\Repository\\ProjectRepository', 'getProjectRepositoryService.php', true],
    'Doctrine\\Common\\Annotations\\Reader' => ['privates', 'annotations.cached_reader', 'getAnnotations_CachedReaderService', false],
    'Doctrine\\Common\\Persistence\\ManagerRegistry' => ['services', 'doctrine', 'getDoctrineService', false],
    'Doctrine\\Common\\Persistence\\ObjectManager' => ['services', 'doctrine.orm.default_entity_manager', 'getDoctrine_Orm_DefaultEntityManagerService.php', true],
    'Doctrine\\DBAL\\Connection' => ['services', 'doctrine.dbal.default_connection', 'getDoctrine_Dbal_DefaultConnectionService.php', true],
    'Doctrine\\DBAL\\Driver\\Connection' => ['services', 'doctrine.dbal.default_connection', 'getDoctrine_Dbal_DefaultConnectionService.php', true],
    'Doctrine\\ORM\\EntityManagerInterface' => ['services', 'doctrine.orm.default_entity_manager', 'getDoctrine_Orm_DefaultEntityManagerService.php', true],
    'JMS\\Serializer\\ArrayTransformerInterface' => ['services', 'jms_serializer', 'getJmsSerializerService.php', true],
    'JMS\\Serializer\\SerializerInterface' => ['services', 'jms_serializer', 'getJmsSerializerService.php', true],
    'Knp\\Bundle\\MarkdownBundle\\MarkdownParserInterface' => ['services', 'markdown.parser', 'getMarkdown_ParserService', false],
    'Knp\\Snappy\\Image' => ['services', 'knp_snappy.image', 'getKnpSnappy_ImageService.php', true],
    'Knp\\Snappy\\Pdf' => ['services', 'knp_snappy.pdf', 'getKnpSnappy_PdfService.php', true],
    'Main\\AdminBundle\\Repository\\AnimalDogBreedRepository' => ['privates', 'Main\\AdminBundle\\Repository\\AnimalDogBreedRepository', 'getAnimalDogBreedRepositoryService.php', true],
    'Main\\InsuranceBundle\\Form\\Company\\Admin\\EditCompanyFormType' => ['privates', 'Main\\InsuranceBundle\\Form\\Company\\Admin\\EditCompanyFormType', 'getEditCompanyFormTypeService.php', true],
    'Main\\InsuranceBundle\\Form\\Company\\Admin\\NewCompanyFormType' => ['privates', 'Main\\InsuranceBundle\\Form\\Company\\Admin\\NewCompanyFormType', 'getNewCompanyFormTypeService.php', true],
    'Main\\InsuranceBundle\\Form\\Contract\\EditContractFormType' => ['privates', 'Main\\InsuranceBundle\\Form\\Contract\\EditContractFormType', 'getEditContractFormTypeService.php', true],
    'Main\\InsuranceBundle\\Form\\Tariff\\Admin\\EditTariffFormType' => ['privates', 'Main\\InsuranceBundle\\Form\\Tariff\\Admin\\EditTariffFormType', 'getEditTariffFormTypeService.php', true],
    'Main\\InsuranceBundle\\Form\\Tariff\\Admin\\NewTariffFormType' => ['privates', 'Main\\InsuranceBundle\\Form\\Tariff\\Admin\\NewTariffFormType', 'getNewTariffFormTypeService.php', true],
    'Main\\InsuranceBundle\\Repository\\CompanyRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\CompanyRepository', 'getCompanyRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\ContractRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\ContractRepository', 'getContractRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\DamageDocumentRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\DamageDocumentRepository', 'getDamageDocumentRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\DamageMediaRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\DamageMediaRepository', 'getDamageMediaRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\DamageRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\DamageRepository', 'getDamageRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\MMContractRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\MMContractRepository', 'getMMContractRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\ProcessActivityRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\ProcessActivityRepository', 'getProcessActivityRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\ProcessRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\ProcessRepository', 'getProcessRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\ProcessStatusRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\ProcessStatusRepository', 'getProcessStatusRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\ProcessTariffTrackerRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\ProcessTariffTrackerRepository', 'getProcessTariffTrackerRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\ProcessTypeRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\ProcessTypeRepository', 'getProcessTypeRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\StructureRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\StructureRepository', 'getStructureRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\SurveyQuestionRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\SurveyQuestionRepository', 'getSurveyQuestionRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\TargetGroupRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\TargetGroupRepository', 'getTargetGroupRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\TariffRateRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\TariffRateRepository', 'getTariffRateRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\TariffRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\TariffRepository', 'getTariffRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\TariffTargetGroupRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\TariffTargetGroupRepository', 'getTariffTargetGroupRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\TariffTypeRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\TariffTypeRepository', 'getTariffTypeRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\TypeRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\TypeRepository', 'getTypeRepositoryService.php', true],
    'Main\\UserBundle\\Doctrine\\HashPasswordListener' => ['privates', 'Main\\UserBundle\\Doctrine\\HashPasswordListener', 'getHashPasswordListenerService.php', true],
    'Main\\UserBundle\\Form\\Address\\Admin\\EditAddressFormType' => ['privates', 'Main\\UserBundle\\Form\\Address\\Admin\\EditAddressFormType', 'getEditAddressFormTypeService.php', true],
    'Main\\UserBundle\\Form\\Address\\Admin\\NewAddressFormType' => ['privates', 'Main\\UserBundle\\Form\\Address\\Admin\\NewAddressFormType', 'getNewAddressFormTypeService.php', true],
    'Main\\UserBundle\\Form\\Bank\\Admin\\EditBankFormType' => ['privates', 'Main\\UserBundle\\Form\\Bank\\Admin\\EditBankFormType', 'getEditBankFormTypeService.php', true],
    'Main\\UserBundle\\Form\\Bank\\Admin\\NewBankFormType' => ['privates', 'Main\\UserBundle\\Form\\Bank\\Admin\\NewBankFormType', 'getNewBankFormTypeService.php', true],
    'Main\\UserBundle\\Form\\LoginForm' => ['privates', 'Main\\UserBundle\\Form\\LoginForm', 'getLoginFormService.php', true],
    'Main\\UserBundle\\Form\\NewsletterFormType' => ['privates', 'Main\\UserBundle\\Form\\NewsletterFormType', 'getNewsletterFormTypeService.php', true],
    'Main\\UserBundle\\Form\\RegistrationForm' => ['privates', 'Main\\UserBundle\\Form\\RegistrationForm', 'getRegistrationFormService.php', true],
    'Main\\UserBundle\\Form\\UserRegistrationForm' => ['privates', 'Main\\UserBundle\\Form\\UserRegistrationForm', 'getUserRegistrationFormService.php', true],
    'Main\\UserBundle\\Form\\User\\Admin\\EditUserFormType' => ['privates', 'Main\\UserBundle\\Form\\User\\Admin\\EditUserFormType', 'getEditUserFormTypeService.php', true],
    'Main\\UserBundle\\Form\\User\\Admin\\NewUserFormType' => ['privates', 'Main\\UserBundle\\Form\\User\\Admin\\NewUserFormType', 'getNewUserFormTypeService.php', true],
    'Main\\UserBundle\\Repository\\AchievementRepository' => ['privates', 'Main\\UserBundle\\Repository\\AchievementRepository', 'getAchievementRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\ActivityRepository' => ['privates', 'Main\\UserBundle\\Repository\\ActivityRepository', 'getActivityRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\AddressRepository' => ['privates', 'Main\\UserBundle\\Repository\\AddressRepository', 'getAddressRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\AddressTypeRepository' => ['privates', 'Main\\UserBundle\\Repository\\AddressTypeRepository', 'getAddressTypeRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\BankAccountRepository' => ['privates', 'Main\\UserBundle\\Repository\\BankAccountRepository', 'getBankAccountRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\BenefitPartnerRepository' => ['privates', 'Main\\UserBundle\\Repository\\BenefitPartnerRepository', 'getBenefitPartnerRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\CityRepository' => ['privates', 'Main\\UserBundle\\Repository\\CityRepository', 'getCityRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\CountryRepository' => ['privates', 'Main\\UserBundle\\Repository\\CountryRepository', 'getCountryRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\FamilyStatusRepository' => ['privates', 'Main\\UserBundle\\Repository\\FamilyStatusRepository', 'getFamilyStatusRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\JobGroupRepository' => ['privates', 'Main\\UserBundle\\Repository\\JobGroupRepository', 'getJobGroupRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\TitleRepository' => ['privates', 'Main\\UserBundle\\Repository\\TitleRepository', 'getTitleRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\UserActivityRepository' => ['privates', 'Main\\UserBundle\\Repository\\UserActivityRepository', 'getUserActivityRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\UserMediaRepository' => ['privates', 'Main\\UserBundle\\Repository\\UserMediaRepository', 'getUserMediaRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\UserProjectRepository' => ['privates', 'Main\\UserBundle\\Repository\\UserProjectRepository', 'getUserProjectRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\UserRepository' => ['privates', 'Main\\UserBundle\\Repository\\UserRepository', 'getUserRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\UserSecurityLogRepository' => ['privates', 'Main\\UserBundle\\Repository\\UserSecurityLogRepository', 'getUserSecurityLogRepositoryService.php', true],
    'Main\\UserBundle\\Security\\LoginFormAuthentificator' => ['privates', 'Main\\UserBundle\\Security\\LoginFormAuthentificator', 'getLoginFormAuthentificatorService.php', true],
    'Main\\UserBundle\\Security\\Voter\\CanDoUploadDocumentVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\CanDoUploadDocumentVoter', 'getCanDoUploadDocumentVoterService.php', true],
    'Main\\UserBundle\\Security\\Voter\\CanSendMessageVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\CanSendMessageVoter', 'getCanSendMessageVoterService.php', true],
    'Main\\UserBundle\\Security\\Voter\\ChoosePaymentVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\ChoosePaymentVoter', 'getChoosePaymentVoterService.php', true],
    'Main\\UserBundle\\Security\\Voter\\DoAdminImportVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\DoAdminImportVoter', 'getDoAdminImportVoterService.php', true],
    'Main\\UserBundle\\Security\\Voter\\DoApplicationVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\DoApplicationVoter', 'getDoApplicationVoterService.php', true],
    'Main\\UserBundle\\Security\\Voter\\DoNewContractVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\DoNewContractVoter', 'getDoNewContractVoterService.php', true],
    'Main\\UserBundle\\Security\\Voter\\DoUseBuilderVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\DoUseBuilderVoter', 'getDoUseBuilderVoterService.php', true],
    'Main\\UserBundle\\Security\\Voter\\EditBenefitVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\EditBenefitVoter', 'getEditBenefitVoterService.php', true],
    'Main\\UserBundle\\Security\\Voter\\SaveSurveyVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\SaveSurveyVoter', 'getSaveSurveyVoterService.php', true],
    'Main\\UserBundle\\Security\\Voter\\UseBenefitVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\UseBenefitVoter', 'getUseBenefitVoterService.php', true],
    'Main\\UserBundle\\Security\\Voter\\ViewChooseSurveyVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\ViewChooseSurveyVoter', 'getViewChooseSurveyVoterService.php', true],
    'Main\\UserBundle\\Security\\Voter\\ViewDoSurveyVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\ViewDoSurveyVoter', 'getViewDoSurveyVoterService.php', true],
    'Main\\UserBundle\\Security\\Voter\\ViewOwnContractsVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\ViewOwnContractsVoter', 'getViewOwnContractsVoterService.php', true],
    'Main\\UserBundle\\Security\\Voter\\ViewProfileVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\ViewProfileVoter', 'getViewProfileVoterService.php', true],
    'Main\\UserBundle\\Security\\Voter\\ViewSurveyResultVoter' => ['privates', 'Main\\UserBundle\\Security\\Voter\\ViewSurveyResultVoter', 'getViewSurveyResultVoterService.php', true],
    'Michelf\\MarkdownInterface' => ['services', 'markdown.parser', 'getMarkdown_ParserService', false],
    'Psr\\Cache\\CacheItemPoolInterface' => ['services', 'cache.app', 'getCache_AppService.php', true],
    'Psr\\Container\\ContainerInterface' => ['services', 'service_container', 'getServiceContainerService.php', true],
    'Psr\\Container\\ContainerInterface $parameterBag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
    'Psr\\Log\\LoggerInterface' => ['privates', 'monolog.logger', 'getMonolog_LoggerService', false],
    'Swift_Mailer' => ['services', 'swiftmailer.mailer.default', 'getSwiftmailer_Mailer_DefaultService.php', true],
    'Swift_Spool' => ['privates', 'swiftmailer.mailer.default.spool.memory', 'getSwiftmailer_Mailer_Default_Spool_MemoryService.php', true],
    'Swift_Transport' => ['services', 'swiftmailer.transport', 'getSwiftmailer_TransportService.php', true],
    'Symfony\\Bridge\\Doctrine\\RegistryInterface' => ['services', 'doctrine', 'getDoctrineService', false],
    'Symfony\\Component\\Asset\\Packages' => ['privates', 'assets.packages', 'getAssets_PackagesService', false],
    'Symfony\\Component\\Cache\\Adapter\\AdapterInterface' => ['services', 'cache.app', 'getCache_AppService.php', true],
    'Symfony\\Component\\DependencyInjection\\ContainerInterface' => ['services', 'service_container', 'getServiceContainerService.php', true],
    'Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBagInterface' => ['privates', 'parameter_bag', 'getParameterBagService', false],
    'Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBagInterface' => ['privates', 'parameter_bag', 'getParameterBagService', false],
    'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
    'Symfony\\Component\\Filesystem\\Filesystem' => ['services', 'filesystem', 'getFilesystemService.php', true],
    'Symfony\\Component\\Form\\FormFactoryInterface' => ['services', 'form.factory', 'getForm_FactoryService.php', true],
    'Symfony\\Component\\Form\\FormRegistryInterface' => ['privates', 'form.registry', 'getForm_RegistryService.php', true],
    'Symfony\\Component\\Form\\ResolvedFormTypeFactoryInterface' => ['privates', 'form.resolved_type_factory', 'getForm_ResolvedTypeFactoryService.php', true],
    'Symfony\\Component\\HttpFoundation\\RequestStack' => ['services', 'request_stack', 'getRequestStackService', false],
    'Symfony\\Component\\HttpFoundation\\Session\\Flash\\FlashBagInterface' => ['privates', 'session.flash_bag', 'getSession_FlashBagService.php', true],
    'Symfony\\Component\\HttpFoundation\\Session\\SessionInterface' => ['services', 'session', 'getSessionService.php', true],
    'Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface' => ['privates', 'session.storage.mock_file', 'getSession_Storage_MockFileService.php', true],
    'Symfony\\Component\\HttpKernel\\Config\\FileLocator' => ['privates', 'file_locator', 'getFileLocatorService.php', true],
    'Symfony\\Component\\HttpKernel\\Debug\\FileLinkFormatter' => ['privates', 'debug.file_link_formatter', 'getDebug_FileLinkFormatterService', false],
    'Symfony\\Component\\HttpKernel\\HttpKernelInterface' => ['services', 'http_kernel', 'getHttpKernelService', false],
    'Symfony\\Component\\HttpKernel\\KernelInterface' => ['services', 'kernel', 'getKernelService', false],
    'Symfony\\Component\\PropertyAccess\\PropertyAccessorInterface' => ['privates', 'property_accessor', 'getPropertyAccessorService.php', true],
    'Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface' => ['services', 'router', 'getRouterService', false],
    'Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface' => ['services', 'router', 'getRouterService', false],
    'Symfony\\Component\\Routing\\RequestContext' => ['privates', 'router.request_context', 'getRouter_RequestContextService', false],
    'Symfony\\Component\\Routing\\RequestContextAwareInterface' => ['services', 'router', 'getRouterService', false],
    'Symfony\\Component\\Routing\\RouterInterface' => ['services', 'router', 'getRouterService', false],
    'Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationManagerInterface' => ['privates', 'security.authentication.manager', 'getSecurity_Authentication_ManagerService', false],
    'Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorageInterface' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
    'Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManagerInterface' => ['privates', 'debug.security.access.decision_manager', 'getDebug_Security_Access_DecisionManagerService', false],
    'Symfony\\Component\\Security\\Core\\Authorization\\AuthorizationCheckerInterface' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
    'Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface' => ['privates', 'security.encoder_factory.generic', 'getSecurity_EncoderFactory_GenericService.php', true],
    'Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoderInterface' => ['services', 'security.password_encoder', 'getSecurity_PasswordEncoderService.php', true],
    'Symfony\\Component\\Security\\Core\\Role\\RoleHierarchyInterface' => ['privates', 'security.role_hierarchy', 'getSecurity_RoleHierarchyService', false],
    'Symfony\\Component\\Security\\Core\\Security' => ['privates', 'security.helper', 'getSecurity_HelperService.php', true],
    'Symfony\\Component\\Security\\Core\\User\\UserCheckerInterface' => ['privates', 'security.user_checker', 'getSecurity_UserCheckerService.php', true],
    'Symfony\\Component\\Security\\Core\\User\\UserProviderInterface' => ['privates', 'security.user.provider.concrete.our_users', 'getSecurity_User_Provider_Concrete_OurUsersService.php', true],
    'Symfony\\Component\\Security\\Csrf\\CsrfTokenManagerInterface' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService.php', true],
    'Symfony\\Component\\Security\\Csrf\\TokenGenerator\\TokenGeneratorInterface' => ['privates', 'security.csrf.token_generator', 'getSecurity_Csrf_TokenGeneratorService.php', true],
    'Symfony\\Component\\Security\\Csrf\\TokenStorage\\TokenStorageInterface' => ['privates', 'security.csrf.token_storage', 'getSecurity_Csrf_TokenStorageService.php', true],
    'Symfony\\Component\\Security\\Guard\\GuardAuthenticatorHandler' => ['privates', 'security.authentication.guard_handler', 'getSecurity_Authentication_GuardHandlerService.php', true],
    'Symfony\\Component\\Security\\Http\\Authentication\\AuthenticationUtils' => ['services', 'security.authentication_utils', 'getSecurity_AuthenticationUtilsService.php', true],
    'Symfony\\Component\\Security\\Http\\Firewall' => ['privates', 'debug.security.firewall', 'getDebug_Security_FirewallService', false],
    'Symfony\\Component\\Security\\Http\\HttpUtils' => ['privates', 'security.http_utils', 'getSecurity_HttpUtilsService.php', true],
    'Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategyInterface' => ['privates', 'security.authentication.session_strategy', 'getSecurity_Authentication_SessionStrategyService.php', true],
    'Symfony\\Component\\Translation\\Extractor\\ExtractorInterface' => ['privates', 'translation.extractor', 'getTranslation_ExtractorService.php', true],
    'Symfony\\Component\\Translation\\Reader\\TranslationReaderInterface' => ['privates', 'translation.reader', 'getTranslation_ReaderService.php', true],
    'Symfony\\Component\\Translation\\TranslatorInterface' => ['services', 'translator', 'getTranslatorService', false],
    'Symfony\\Component\\Translation\\Writer\\TranslationWriterInterface' => ['privates', 'translation.writer', 'getTranslation_WriterService.php', true],
    'Symfony\\Component\\Validator\\Validator\\ValidatorInterface' => ['services', 'validator', 'getValidatorService.php', true],
    'Symfony\\Contracts\\Cache\\CacheInterface' => ['services', 'cache.app', 'getCache_AppService.php', true],
    'Symfony\\Contracts\\Translation\\TranslatorInterface' => ['services', 'translator', 'getTranslatorService', false],
    'Twig\\Environment' => ['services', 'twig', 'getTwigService', false],
    'Twig_Environment' => ['services', 'twig', 'getTwigService', false],
    'annotation_reader' => ['privates', 'annotations.cached_reader', 'getAnnotations_CachedReaderService', false],
    'annotations.cache' => ['privates', 'annotations.cache', 'getAnnotations_CacheService.php', true],
    'annotations.cache_warmer' => ['privates', 'annotations.cache_warmer', 'getAnnotations_CacheWarmerService.php', true],
    'annotations.cached_reader' => ['privates', 'annotations.cached_reader', 'getAnnotations_CachedReaderService', false],
    'annotations.dummy_registry' => ['privates', 'annotations.dummy_registry', 'getAnnotations_DummyRegistryService', false],
    'annotations.reader' => ['privates', 'annotations.reader', 'getAnnotations_ReaderService', false],
    'app.security.voter.can_upload_document' => ['privates', 'app.security.voter.can_upload_document', 'getApp_Security_Voter_CanUploadDocumentService.php', true],
    'app.security.voter.choose_payment' => ['privates', 'app.security.voter.choose_payment', 'getApp_Security_Voter_ChoosePaymentService.php', true],
    'app.security.voter.do_admin_import' => ['privates', 'app.security.voter.do_admin_import', 'getApp_Security_Voter_DoAdminImportService.php', true],
    'app.security.voter.do_application' => ['privates', 'app.security.voter.do_application', 'getApp_Security_Voter_DoApplicationService.php', true],
    'app.security.voter.do_use_builder' => ['privates', 'app.security.voter.do_use_builder', 'getApp_Security_Voter_DoUseBuilderService.php', true],
    'app.security.voter.edit_benefit' => ['privates', 'app.security.voter.edit_benefit', 'getApp_Security_Voter_EditBenefitService.php', true],
    'app.security.voter.save_survey' => ['privates', 'app.security.voter.save_survey', 'getApp_Security_Voter_SaveSurveyService.php', true],
    'app.security.voter.use_benefit' => ['privates', 'app.security.voter.use_benefit', 'getApp_Security_Voter_UseBenefitService.php', true],
    'app.security.voter.view_choose_survey' => ['privates', 'app.security.voter.view_choose_survey', 'getApp_Security_Voter_ViewChooseSurveyService.php', true],
    'app.security.voter.view_do_survey' => ['privates', 'app.security.voter.view_do_survey', 'getApp_Security_Voter_ViewDoSurveyService.php', true],
    'app.security.voter.view_profile' => ['privates', 'app.security.voter.view_profile', 'getApp_Security_Voter_ViewProfileService.php', true],
    'app.security.voter.view_survey_result' => ['privates', 'app.security.voter.view_survey_result', 'getApp_Security_Voter_ViewSurveyResultService.php', true],
    'argument_metadata_factory' => ['privates', 'argument_metadata_factory', 'getArgumentMetadataFactoryService', false],
    'argument_resolver' => ['privates', 'argument_resolver', 'getArgumentResolverService', false],
    'argument_resolver.controller_locator' => ['privates', '.service_locator.MzWCiiK', 'get_ServiceLocator_MzWCiiKService.php', true],
    'argument_resolver.default' => ['privates', 'argument_resolver.default', 'getArgumentResolver_DefaultService.php', true],
    'argument_resolver.request' => ['privates', 'argument_resolver.request', 'getArgumentResolver_RequestService.php', true],
    'argument_resolver.request_attribute' => ['privates', 'argument_resolver.request_attribute', 'getArgumentResolver_RequestAttributeService.php', true],
    'argument_resolver.service' => ['privates', 'argument_resolver.service', 'getArgumentResolver_ServiceService.php', true],
    'argument_resolver.session' => ['privates', 'argument_resolver.session', 'getArgumentResolver_SessionService.php', true],
    'argument_resolver.variadic' => ['privates', 'argument_resolver.variadic', 'getArgumentResolver_VariadicService.php', true],
    'assets._default_package' => ['privates', 'assets._default_package', 'getAssets_DefaultPackageService', false],
    'assets._version__default' => ['privates', 'assets._version__default', 'getAssets_VersionDefaultService', false],
    'assets.context' => ['privates', 'assets.context', 'getAssets_ContextService', false],
    'assets.packages' => ['privates', 'assets.packages', 'getAssets_PackagesService', false],
    'cache.annotations' => ['privates', 'cache.annotations', 'getCache_AnnotationsService.php', true],
    'cache.default_clearer' => ['services', 'cache.app_clearer', 'getCache_AppClearerService.php', true],
    'cache.default_marshaller' => ['privates', 'cache.default_marshaller', 'getCache_DefaultMarshallerService.php', true],
    'cache.default_pdo_provider' => ['services', 'doctrine.dbal.default_connection', 'getDoctrine_Dbal_DefaultConnectionService.php', true],
    'cache.property_access' => ['privates', 'cache.property_access', 'getCache_PropertyAccessService.php', true],
    'cache.security_expression_language' => ['privates', 'cache.security_expression_language', 'getCache_SecurityExpressionLanguageService.php', true],
    'config.resource.self_checking_resource_checker' => ['privates', 'config.resource.self_checking_resource_checker', 'getConfig_Resource_SelfCheckingResourceCheckerService.php', true],
    'config_cache_factory' => ['privates', 'config_cache_factory', 'getConfigCacheFactoryService', false],
    'console.command.about' => ['privates', 'console.command.about', 'getConsole_Command_AboutService.php', true],
    'console.command.assets_install' => ['privates', 'console.command.assets_install', 'getConsole_Command_AssetsInstallService.php', true],
    'console.command.cache_clear' => ['privates', 'console.command.cache_clear', 'getConsole_Command_CacheClearService.php', true],
    'console.command.cache_pool_clear' => ['privates', 'console.command.cache_pool_clear', 'getConsole_Command_CachePoolClearService.php', true],
    'console.command.cache_pool_delete' => ['privates', 'console.command.cache_pool_delete', 'getConsole_Command_CachePoolDeleteService.php', true],
    'console.command.cache_pool_prune' => ['privates', 'console.command.cache_pool_prune', 'getConsole_Command_CachePoolPruneService.php', true],
    'console.command.cache_warmup' => ['privates', 'console.command.cache_warmup', 'getConsole_Command_CacheWarmupService.php', true],
    'console.command.config_debug' => ['privates', 'console.command.config_debug', 'getConsole_Command_ConfigDebugService.php', true],
    'console.command.config_dump_reference' => ['privates', 'console.command.config_dump_reference', 'getConsole_Command_ConfigDumpReferenceService.php', true],
    'console.command.container_debug' => ['privates', 'console.command.container_debug', 'getConsole_Command_ContainerDebugService.php', true],
    'console.command.debug_autowiring' => ['privates', 'console.command.debug_autowiring', 'getConsole_Command_DebugAutowiringService.php', true],
    'console.command.event_dispatcher_debug' => ['privates', 'console.command.event_dispatcher_debug', 'getConsole_Command_EventDispatcherDebugService.php', true],
    'console.command.form_debug' => ['privates', 'console.command.form_debug', 'getConsole_Command_FormDebugService.php', true],
    'console.command.router_debug' => ['privates', 'console.command.router_debug', 'getConsole_Command_RouterDebugService.php', true],
    'console.command.router_match' => ['privates', 'console.command.router_match', 'getConsole_Command_RouterMatchService.php', true],
    'console.command.translation_debug' => ['privates', 'console.command.translation_debug', 'getConsole_Command_TranslationDebugService.php', true],
    'console.command.translation_update' => ['privates', 'console.command.translation_update', 'getConsole_Command_TranslationUpdateService.php', true],
    'console.command.xliff_lint' => ['privates', 'console.command.xliff_lint', 'getConsole_Command_XliffLintService.php', true],
    'console.command.yaml_lint' => ['privates', 'console.command.yaml_lint', 'getConsole_Command_YamlLintService.php', true],
    'console.error_listener' => ['privates', 'console.error_listener', 'getConsole_ErrorListenerService.php', true],
    'controller_name_converter' => ['privates', 'controller_name_converter', 'getControllerNameConverterService', false],
    'controller_resolver' => ['privates', 'controller_resolver', 'getControllerResolverService', false],
    'debug.debug_handlers_listener' => ['privates', 'debug.debug_handlers_listener', 'getDebug_DebugHandlersListenerService', false],
    'debug.file_link_formatter' => ['privates', 'debug.file_link_formatter', 'getDebug_FileLinkFormatterService', false],
    'debug.security.access.decision_manager' => ['privates', 'debug.security.access.decision_manager', 'getDebug_Security_Access_DecisionManagerService', false],
    'debug.security.access.decision_manager.inner' => ['privates', 'debug.security.access.decision_manager.inner', 'getDebug_Security_Access_DecisionManager_InnerService', false],
    'debug.security.firewall' => ['privates', 'debug.security.firewall', 'getDebug_Security_FirewallService', false],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\CanDoUploadDocumentVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\CanDoUploadDocumentVoter', 'getCanDoUploadDocumentVoter2Service.php', true],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\CanSendMessageVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\CanSendMessageVoter', 'getCanSendMessageVoter2Service.php', true],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\ChoosePaymentVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\ChoosePaymentVoter', 'getChoosePaymentVoter2Service.php', true],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\DoAdminImportVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\DoAdminImportVoter', 'getDoAdminImportVoter2Service.php', true],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\DoApplicationVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\DoApplicationVoter', 'getDoApplicationVoter2Service.php', true],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\DoNewContractVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\DoNewContractVoter', 'getDoNewContractVoter2Service.php', true],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\DoUseBuilderVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\DoUseBuilderVoter', 'getDoUseBuilderVoter2Service.php', true],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\EditBenefitVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\EditBenefitVoter', 'getEditBenefitVoter2Service.php', true],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\SaveSurveyVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\SaveSurveyVoter', 'getSaveSurveyVoter2Service.php', true],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\UseBenefitVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\UseBenefitVoter', 'getUseBenefitVoter2Service.php', true],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\ViewChooseSurveyVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\ViewChooseSurveyVoter', 'getViewChooseSurveyVoter2Service.php', true],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\ViewDoSurveyVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\ViewDoSurveyVoter', 'getViewDoSurveyVoter2Service.php', true],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\ViewOwnContractsVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\ViewOwnContractsVoter', 'getViewOwnContractsVoter2Service.php', true],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\ViewProfileVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\ViewProfileVoter', 'getViewProfileVoter2Service.php', true],
    'debug.security.voter.Main\\UserBundle\\Security\\Voter\\ViewSurveyResultVoter' => ['privates', 'debug.security.voter.Main\\UserBundle\\Security\\Voter\\ViewSurveyResultVoter', 'getViewSurveyResultVoter2Service.php', true],
    'debug.security.voter.app.security.voter.can_upload_document' => ['privates', 'debug.security.voter.app.security.voter.can_upload_document', 'getDebug_Security_Voter_App_Security_Voter_CanUploadDocumentService.php', true],
    'debug.security.voter.app.security.voter.choose_payment' => ['privates', 'debug.security.voter.app.security.voter.choose_payment', 'getDebug_Security_Voter_App_Security_Voter_ChoosePaymentService.php', true],
    'debug.security.voter.app.security.voter.do_admin_import' => ['privates', 'debug.security.voter.app.security.voter.do_admin_import', 'getDebug_Security_Voter_App_Security_Voter_DoAdminImportService.php', true],
    'debug.security.voter.app.security.voter.do_application' => ['privates', 'debug.security.voter.app.security.voter.do_application', 'getDebug_Security_Voter_App_Security_Voter_DoApplicationService.php', true],
    'debug.security.voter.app.security.voter.do_use_builder' => ['privates', 'debug.security.voter.app.security.voter.do_use_builder', 'getDebug_Security_Voter_App_Security_Voter_DoUseBuilderService.php', true],
    'debug.security.voter.app.security.voter.edit_benefit' => ['privates', 'debug.security.voter.app.security.voter.edit_benefit', 'getDebug_Security_Voter_App_Security_Voter_EditBenefitService.php', true],
    'debug.security.voter.app.security.voter.save_survey' => ['privates', 'debug.security.voter.app.security.voter.save_survey', 'getDebug_Security_Voter_App_Security_Voter_SaveSurveyService.php', true],
    'debug.security.voter.app.security.voter.use_benefit' => ['privates', 'debug.security.voter.app.security.voter.use_benefit', 'getDebug_Security_Voter_App_Security_Voter_UseBenefitService.php', true],
    'debug.security.voter.app.security.voter.view_choose_survey' => ['privates', 'debug.security.voter.app.security.voter.view_choose_survey', 'getDebug_Security_Voter_App_Security_Voter_ViewChooseSurveyService.php', true],
    'debug.security.voter.app.security.voter.view_do_survey' => ['privates', 'debug.security.voter.app.security.voter.view_do_survey', 'getDebug_Security_Voter_App_Security_Voter_ViewDoSurveyService.php', true],
    'debug.security.voter.app.security.voter.view_profile' => ['privates', 'debug.security.voter.app.security.voter.view_profile', 'getDebug_Security_Voter_App_Security_Voter_ViewProfileService.php', true],
    'debug.security.voter.app.security.voter.view_survey_result' => ['privates', 'debug.security.voter.app.security.voter.view_survey_result', 'getDebug_Security_Voter_App_Security_Voter_ViewSurveyResultService.php', true],
    'debug.security.voter.security.access.authenticated_voter' => ['privates', 'debug.security.voter.security.access.authenticated_voter', 'getDebug_Security_Voter_Security_Access_AuthenticatedVoterService.php', true],
    'debug.security.voter.security.access.expression_voter' => ['privates', 'debug.security.voter.security.access.expression_voter', 'getDebug_Security_Voter_Security_Access_ExpressionVoterService.php', true],
    'debug.security.voter.security.access.role_hierarchy_voter' => ['privates', 'debug.security.voter.security.access.role_hierarchy_voter', 'getDebug_Security_Voter_Security_Access_RoleHierarchyVoterService.php', true],
    'debug.security.voter.vote_listener' => ['privates', 'debug.security.voter.vote_listener', 'getDebug_Security_Voter_VoteListenerService.php', true],
    'dependency_injection.config.container_parameters_resource_checker' => ['privates', 'dependency_injection.config.container_parameters_resource_checker', 'getDependencyInjection_Config_ContainerParametersResourceCheckerService.php', true],
    'doctrine.cache_clear_metadata_command' => ['privates', 'doctrine.cache_clear_metadata_command', 'getDoctrine_CacheClearMetadataCommandService.php', true],
    'doctrine.cache_clear_query_cache_command' => ['privates', 'doctrine.cache_clear_query_cache_command', 'getDoctrine_CacheClearQueryCacheCommandService.php', true],
    'doctrine.cache_clear_result_command' => ['privates', 'doctrine.cache_clear_result_command', 'getDoctrine_CacheClearResultCommandService.php', true],
    'doctrine.cache_collection_region_command' => ['privates', 'doctrine.cache_collection_region_command', 'getDoctrine_CacheCollectionRegionCommandService.php', true],
    'doctrine.clear_entity_region_command' => ['privates', 'doctrine.clear_entity_region_command', 'getDoctrine_ClearEntityRegionCommandService.php', true],
    'doctrine.clear_query_region_command' => ['privates', 'doctrine.clear_query_region_command', 'getDoctrine_ClearQueryRegionCommandService.php', true],
    'doctrine.database_create_command' => ['privates', 'doctrine.database_create_command', 'getDoctrine_DatabaseCreateCommandService.php', true],
    'doctrine.database_drop_command' => ['privates', 'doctrine.database_drop_command', 'getDoctrine_DatabaseDropCommandService.php', true],
    'doctrine.database_import_command' => ['privates', 'doctrine.database_import_command', 'getDoctrine_DatabaseImportCommandService.php', true],
    'doctrine.dbal.connection_factory' => ['privates', 'doctrine.dbal.connection_factory', 'getDoctrine_Dbal_ConnectionFactoryService.php', true],
    'doctrine.dbal.default_connection.configuration' => ['privates', 'doctrine.dbal.default_connection.configuration', 'getDoctrine_Dbal_DefaultConnection_ConfigurationService.php', true],
    'doctrine.dbal.default_connection.event_manager' => ['privates', 'doctrine.dbal.default_connection.event_manager', 'getDoctrine_Dbal_DefaultConnection_EventManagerService.php', true],
    'doctrine.dbal.event_manager' => ['privates', 'doctrine.dbal.default_connection.event_manager', 'getDoctrine_Dbal_DefaultConnection_EventManagerService.php', true],
    'doctrine.dbal.logger' => ['privates', 'doctrine.dbal.logger', 'getDoctrine_Dbal_LoggerService.php', true],
    'doctrine.dbal.logger.chain.default' => ['privates', 'doctrine.dbal.logger.chain.default', 'getDoctrine_Dbal_Logger_Chain_DefaultService.php', true],
    'doctrine.dbal.logger.profiling.default' => ['privates', 'doctrine.dbal.logger.profiling.default', 'getDoctrine_Dbal_Logger_Profiling_DefaultService.php', true],
    'doctrine.ensure_production_settings_command' => ['privates', 'doctrine.ensure_production_settings_command', 'getDoctrine_EnsureProductionSettingsCommandService.php', true],
    'doctrine.generate_entities_command' => ['privates', 'doctrine.generate_entities_command', 'getDoctrine_GenerateEntitiesCommandService.php', true],
    'doctrine.mapping_convert_command' => ['privates', 'doctrine.mapping_convert_command', 'getDoctrine_MappingConvertCommandService.php', true],
    'doctrine.mapping_import_command' => ['privates', 'doctrine.mapping_import_command', 'getDoctrine_MappingImportCommandService.php', true],
    'doctrine.mapping_info_command' => ['privates', 'doctrine.mapping_info_command', 'getDoctrine_MappingInfoCommandService.php', true],
    'doctrine.orm.container_repository_factory' => ['privates', 'doctrine.orm.container_repository_factory', 'getDoctrine_Orm_ContainerRepositoryFactoryService.php', true],
    'doctrine.orm.default_annotation_metadata_driver' => ['privates', 'doctrine.orm.default_annotation_metadata_driver', 'getDoctrine_Orm_DefaultAnnotationMetadataDriverService.php', true],
    'doctrine.orm.default_configuration' => ['privates', 'doctrine.orm.default_configuration', 'getDoctrine_Orm_DefaultConfigurationService.php', true],
    'doctrine.orm.default_entity_listener_resolver' => ['privates', 'doctrine.orm.default_entity_listener_resolver', 'getDoctrine_Orm_DefaultEntityListenerResolverService.php', true],
    'doctrine.orm.default_entity_manager.event_manager' => ['privates', 'doctrine.dbal.default_connection.event_manager', 'getDoctrine_Dbal_DefaultConnection_EventManagerService.php', true],
    'doctrine.orm.default_listeners.attach_entity_listeners' => ['privates', 'doctrine.orm.default_listeners.attach_entity_listeners', 'getDoctrine_Orm_DefaultListeners_AttachEntityListenersService.php', true],
    'doctrine.orm.default_manager_configurator' => ['privates', 'doctrine.orm.default_manager_configurator', 'getDoctrine_Orm_DefaultManagerConfiguratorService.php', true],
    'doctrine.orm.default_metadata_driver' => ['privates', 'doctrine.orm.default_metadata_driver', 'getDoctrine_Orm_DefaultMetadataDriverService.php', true],
    'doctrine.orm.metadata.annotation_reader' => ['privates', 'annotations.cached_reader', 'getAnnotations_CachedReaderService', false],
    'doctrine.orm.naming_strategy.underscore' => ['privates', 'doctrine.orm.naming_strategy.underscore', 'getDoctrine_Orm_NamingStrategy_UnderscoreService.php', true],
    'doctrine.orm.proxy_cache_warmer' => ['privates', 'doctrine.orm.proxy_cache_warmer', 'getDoctrine_Orm_ProxyCacheWarmerService.php', true],
    'doctrine.orm.quote_strategy.default' => ['privates', 'doctrine.orm.quote_strategy.default', 'getDoctrine_Orm_QuoteStrategy_DefaultService.php', true],
    'doctrine.orm.validator.unique' => ['privates', 'doctrine.orm.validator.unique', 'getDoctrine_Orm_Validator_UniqueService.php', true],
    'doctrine.orm.validator_initializer' => ['privates', 'doctrine.orm.validator_initializer', 'getDoctrine_Orm_ValidatorInitializerService.php', true],
    'doctrine.query_dql_command' => ['privates', 'doctrine.query_dql_command', 'getDoctrine_QueryDqlCommandService.php', true],
    'doctrine.query_sql_command' => ['privates', 'doctrine.query_sql_command', 'getDoctrine_QuerySqlCommandService.php', true],
    'doctrine.schema_create_command' => ['privates', 'doctrine.schema_create_command', 'getDoctrine_SchemaCreateCommandService.php', true],
    'doctrine.schema_drop_command' => ['privates', 'doctrine.schema_drop_command', 'getDoctrine_SchemaDropCommandService.php', true],
    'doctrine.schema_update_command' => ['privates', 'doctrine.schema_update_command', 'getDoctrine_SchemaUpdateCommandService.php', true],
    'doctrine.schema_validate_command' => ['privates', 'doctrine.schema_validate_command', 'getDoctrine_SchemaValidateCommandService.php', true],
    'doctrine.twig.doctrine_extension' => ['privates', 'doctrine.twig.doctrine_extension', 'getDoctrine_Twig_DoctrineExtensionService', false],
    'doctrine_cache.contains_command' => ['services', 'console.command.public_alias.doctrine_cache.contains_command', 'getConsole_Command_PublicAlias_DoctrineCache_ContainsCommandService.php', true],
    'doctrine_cache.delete_command' => ['services', 'console.command.public_alias.doctrine_cache.delete_command', 'getConsole_Command_PublicAlias_DoctrineCache_DeleteCommandService.php', true],
    'doctrine_cache.flush_command' => ['services', 'console.command.public_alias.doctrine_cache.flush_command', 'getConsole_Command_PublicAlias_DoctrineCache_FlushCommandService.php', true],
    'doctrine_cache.stats_command' => ['services', 'console.command.public_alias.doctrine_cache.stats_command', 'getConsole_Command_PublicAlias_DoctrineCache_StatsCommandService.php', true],
    'doctrine_migrations.diff_command' => ['services', 'console.command.public_alias.doctrine_migrations.diff_command', 'getConsole_Command_PublicAlias_DoctrineMigrations_DiffCommandService.php', true],
    'doctrine_migrations.execute_command' => ['services', 'console.command.public_alias.doctrine_migrations.execute_command', 'getConsole_Command_PublicAlias_DoctrineMigrations_ExecuteCommandService.php', true],
    'doctrine_migrations.generate_command' => ['services', 'console.command.public_alias.doctrine_migrations.generate_command', 'getConsole_Command_PublicAlias_DoctrineMigrations_GenerateCommandService.php', true],
    'doctrine_migrations.latest_command' => ['services', 'console.command.public_alias.doctrine_migrations.latest_command', 'getConsole_Command_PublicAlias_DoctrineMigrations_LatestCommandService.php', true],
    'doctrine_migrations.migrate_command' => ['services', 'console.command.public_alias.doctrine_migrations.migrate_command', 'getConsole_Command_PublicAlias_DoctrineMigrations_MigrateCommandService.php', true],
    'doctrine_migrations.status_command' => ['services', 'console.command.public_alias.doctrine_migrations.status_command', 'getConsole_Command_PublicAlias_DoctrineMigrations_StatusCommandService.php', true],
    'doctrine_migrations.version_command' => ['services', 'console.command.public_alias.doctrine_migrations.version_command', 'getConsole_Command_PublicAlias_DoctrineMigrations_VersionCommandService.php', true],
    'file_locator' => ['privates', 'file_locator', 'getFileLocatorService.php', true],
    'form.choice_list_factory' => ['privates', 'form.choice_list_factory.cached', 'getForm_ChoiceListFactory_CachedService.php', true],
    'form.choice_list_factory.cached' => ['privates', 'form.choice_list_factory.cached', 'getForm_ChoiceListFactory_CachedService.php', true],
    'form.choice_list_factory.default' => ['privates', 'form.choice_list_factory.default', 'getForm_ChoiceListFactory_DefaultService.php', true],
    'form.choice_list_factory.property_access' => ['privates', 'form.choice_list_factory.property_access', 'getForm_ChoiceListFactory_PropertyAccessService.php', true],
    'form.extension' => ['privates', 'form.extension', 'getForm_ExtensionService.php', true],
    'form.property_accessor' => ['privates', 'property_accessor', 'getPropertyAccessorService.php', true],
    'form.registry' => ['privates', 'form.registry', 'getForm_RegistryService.php', true],
    'form.resolved_type_factory' => ['privates', 'form.resolved_type_factory', 'getForm_ResolvedTypeFactoryService.php', true],
    'form.server_params' => ['privates', 'form.server_params', 'getForm_ServerParamsService.php', true],
    'form.type.choice' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService.php', true],
    'form.type.entity' => ['privates', 'form.type.entity', 'getForm_Type_EntityService.php', true],
    'form.type.form' => ['privates', 'form.type.form', 'getForm_Type_FormService.php', true],
    'form.type_extension.csrf' => ['privates', 'form.type_extension.csrf', 'getForm_TypeExtension_CsrfService.php', true],
    'form.type_extension.form.http_foundation' => ['privates', 'form.type_extension.form.http_foundation', 'getForm_TypeExtension_Form_HttpFoundationService.php', true],
    'form.type_extension.form.request_handler' => ['privates', 'form.type_extension.form.request_handler', 'getForm_TypeExtension_Form_RequestHandlerService.php', true],
    'form.type_extension.form.transformation_failure_handling' => ['privates', 'form.type_extension.form.transformation_failure_handling', 'getForm_TypeExtension_Form_TransformationFailureHandlingService.php', true],
    'form.type_extension.form.validator' => ['privates', 'form.type_extension.form.validator', 'getForm_TypeExtension_Form_ValidatorService.php', true],
    'form.type_extension.repeated.validator' => ['privates', 'form.type_extension.repeated.validator', 'getForm_TypeExtension_Repeated_ValidatorService.php', true],
    'form.type_extension.submit.validator' => ['privates', 'form.type_extension.submit.validator', 'getForm_TypeExtension_Submit_ValidatorService.php', true],
    'form.type_extension.upload.validator' => ['privates', 'form.type_extension.upload.validator', 'getForm_TypeExtension_Upload_ValidatorService.php', true],
    'form.type_guesser.doctrine' => ['privates', 'form.type_guesser.doctrine', 'getForm_TypeGuesser_DoctrineService.php', true],
    'form.type_guesser.validator' => ['privates', 'form.type_guesser.validator', 'getForm_TypeGuesser_ValidatorService.php', true],
    'fragment.handler' => ['privates', 'fragment.handler', 'getFragment_HandlerService.php', true],
    'fragment.listener' => ['privates', 'fragment.listener', 'getFragment_ListenerService', false],
    'fragment.renderer.inline' => ['privates', 'fragment.renderer.inline', 'getFragment_Renderer_InlineService.php', true],
    'framework_extra_bundle.argument_name_convertor' => ['privates', 'framework_extra_bundle.argument_name_convertor', 'getFrameworkExtraBundle_ArgumentNameConvertorService', false],
    'framework_extra_bundle.date_time_param_converter' => ['privates', 'framework_extra_bundle.date_time_param_converter', 'getFrameworkExtraBundle_DateTimeParamConverterService', false],
    'framework_extra_bundle.event.is_granted' => ['privates', 'framework_extra_bundle.event.is_granted', 'getFrameworkExtraBundle_Event_IsGrantedService', false],
    'http_exception_listener' => ['privates', 'http_exception_listener', 'getHttpExceptionListenerService.php', true],
    'identity_translator' => ['privates', 'identity_translator', 'getIdentityTranslatorService', false],
    'jms_serializer.accessor_strategy' => ['privates', 'jms_serializer.accessor_strategy.expression', 'getJmsSerializer_AccessorStrategy_ExpressionService.php', true],
    'jms_serializer.accessor_strategy.default' => ['privates', 'jms_serializer.accessor_strategy.default', 'getJmsSerializer_AccessorStrategy_DefaultService.php', true],
    'jms_serializer.accessor_strategy.expression' => ['privates', 'jms_serializer.accessor_strategy.expression', 'getJmsSerializer_AccessorStrategy_ExpressionService.php', true],
    'jms_serializer.cache_naming_strategy' => ['privates', 'jms_serializer.cache_naming_strategy', 'getJmsSerializer_CacheNamingStrategyService.php', true],
    'jms_serializer.camel_case_naming_strategy' => ['privates', 'jms_serializer.camel_case_naming_strategy', 'getJmsSerializer_CamelCaseNamingStrategyService.php', true],
    'jms_serializer.configured_deserialization_context_factory' => ['services', 'jms_serializer.deserialization_context_factory', 'getJmsSerializer_DeserializationContextFactoryService.php', true],
    'jms_serializer.configured_serialization_context_factory' => ['services', 'jms_serializer.serialization_context_factory', 'getJmsSerializer_SerializationContextFactoryService.php', true],
    'jms_serializer.doctrine_object_constructor' => ['services', 'jms_serializer.object_constructor', 'getJmsSerializer_ObjectConstructorService.php', true],
    'jms_serializer.event_dispatcher' => ['privates', 'jms_serializer.event_dispatcher', 'getJmsSerializer_EventDispatcherService.php', true],
    'jms_serializer.expression_evaluator' => ['privates', 'jms_serializer.expression_evaluator', 'getJmsSerializer_ExpressionEvaluatorService.php', true],
    'jms_serializer.expression_language' => ['privates', 'jms_serializer.expression_language', 'getJmsSerializer_ExpressionLanguageService.php', true],
    'jms_serializer.expression_language.function_provider' => ['privates', 'jms_serializer.expression_language.function_provider', 'getJmsSerializer_ExpressionLanguage_FunctionProviderService.php', true],
    'jms_serializer.handler_registry' => ['privates', 'jms_serializer.handler_registry', 'getJmsSerializer_HandlerRegistryService.php', true],
    'jms_serializer.metadata.annotation_driver' => ['privates', 'jms_serializer.metadata.annotation_driver', 'getJmsSerializer_Metadata_AnnotationDriverService.php', true],
    'jms_serializer.metadata.cache' => ['privates', 'jms_serializer.metadata.cache.file_cache', 'getJmsSerializer_Metadata_Cache_FileCacheService.php', true],
    'jms_serializer.metadata.cache.file_cache' => ['privates', 'jms_serializer.metadata.cache.file_cache', 'getJmsSerializer_Metadata_Cache_FileCacheService.php', true],
    'jms_serializer.metadata.chain_driver' => ['privates', 'jms_serializer.metadata.chain_driver', 'getJmsSerializer_Metadata_ChainDriverService.php', true],
    'jms_serializer.metadata.doctrine_type_driver' => ['services', 'jms_serializer.metadata_driver', 'getJmsSerializer_MetadataDriverService.php', true],
    'jms_serializer.metadata.file_locator' => ['privates', 'jms_serializer.metadata.file_locator', 'getJmsSerializer_Metadata_FileLocatorService.php', true],
    'jms_serializer.metadata.lazy_loading_driver' => ['privates', 'jms_serializer.metadata.lazy_loading_driver', 'getJmsSerializer_Metadata_LazyLoadingDriverService.php', true],
    'jms_serializer.metadata.php_driver' => ['privates', 'jms_serializer.metadata.php_driver', 'getJmsSerializer_Metadata_PhpDriverService.php', true],
    'jms_serializer.metadata.xml_driver' => ['privates', 'jms_serializer.metadata.xml_driver', 'getJmsSerializer_Metadata_XmlDriverService.php', true],
    'jms_serializer.metadata.yaml_driver' => ['privates', 'jms_serializer.metadata.yaml_driver', 'getJmsSerializer_Metadata_YamlDriverService.php', true],
    'jms_serializer.metadata_factory' => ['privates', 'jms_serializer.metadata_factory', 'getJmsSerializer_MetadataFactoryService.php', true],
    'jms_serializer.naming_strategy' => ['privates', 'jms_serializer.cache_naming_strategy', 'getJmsSerializer_CacheNamingStrategyService.php', true],
    'jms_serializer.serialized_name_annotation_strategy' => ['privates', 'jms_serializer.serialized_name_annotation_strategy', 'getJmsSerializer_SerializedNameAnnotationStrategyService.php', true],
    'jms_serializer.serializer' => ['services', 'jms_serializer', 'getJmsSerializerService.php', true],
    'jms_serializer.twig_extension.serializer' => ['privates', 'jms_serializer.twig_extension.serializer', 'getJmsSerializer_TwigExtension_SerializerService', false],
    'jms_serializer.unserialize_object_constructor' => ['privates', 'jms_serializer.unserialize_object_constructor', 'getJmsSerializer_UnserializeObjectConstructorService.php', true],
    'locale_listener' => ['privates', 'locale_listener', 'getLocaleListenerService', false],
    'logger' => ['privates', 'monolog.logger', 'getMonolog_LoggerService', false],
    'markdown.parser.flavored' => ['privates', 'markdown.parser.flavored', 'getMarkdown_Parser_FlavoredService', false],
    'markdown.parser.light' => ['privates', 'markdown.parser.light', 'getMarkdown_Parser_LightService', false],
    'markdown.parser.max' => ['services', 'markdown.parser', 'getMarkdown_ParserService', false],
    'markdown.parser.medium' => ['privates', 'markdown.parser.medium', 'getMarkdown_Parser_MediumService', false],
    'markdown.parser.min' => ['privates', 'markdown.parser.min', 'getMarkdown_Parser_MinService', false],
    'markdown.parser.parser_manager' => ['privates', 'markdown.parser.parser_manager', 'getMarkdown_Parser_ParserManagerService', false],
    'monolog.handler.console' => ['privates', 'monolog.handler.console', 'getMonolog_Handler_ConsoleService', false],
    'monolog.handler.main' => ['privates', 'monolog.handler.main', 'getMonolog_Handler_MainService', false],
    'monolog.handler.my_logger' => ['privates', 'monolog.handler.my_logger', 'getMonolog_Handler_MyLoggerService', false],
    'monolog.logger' => ['privates', 'monolog.logger', 'getMonolog_LoggerService', false],
    'monolog.logger.cache' => ['privates', 'monolog.logger.cache', 'getMonolog_Logger_CacheService.php', true],
    'monolog.logger.console' => ['privates', 'monolog.logger.console', 'getMonolog_Logger_ConsoleService.php', true],
    'monolog.logger.doctrine' => ['privates', 'monolog.logger.doctrine', 'getMonolog_Logger_DoctrineService.php', true],
    'monolog.logger.request' => ['privates', 'monolog.logger.request', 'getMonolog_Logger_RequestService', false],
    'monolog.logger.router' => ['privates', 'monolog.logger.router', 'getMonolog_Logger_RouterService', false],
    'monolog.logger.security' => ['privates', 'monolog.logger.security', 'getMonolog_Logger_SecurityService.php', true],
    'monolog.logger.snappy' => ['privates', 'monolog.logger.snappy', 'getMonolog_Logger_SnappyService.php', true],
    'monolog.processor.psr_log_message' => ['privates', 'monolog.processor.psr_log_message', 'getMonolog_Processor_PsrLogMessageService', false],
    'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
    'property_accessor' => ['privates', 'property_accessor', 'getPropertyAccessorService.php', true],
    'resolve_controller_name_subscriber' => ['privates', 'resolve_controller_name_subscriber', 'getResolveControllerNameSubscriberService', false],
    'response_listener' => ['privates', 'response_listener', 'getResponseListenerService', false],
    'router.cache_warmer' => ['privates', 'router.cache_warmer', 'getRouter_CacheWarmerService.php', true],
    'router.default' => ['services', 'router', 'getRouterService', false],
    'router.request_context' => ['privates', 'router.request_context', 'getRouter_RequestContextService', false],
    'router_listener' => ['privates', 'router_listener', 'getRouterListenerService', false],
    'routing.loader.annotation' => ['privates', 'routing.loader.annotation', 'getRouting_Loader_AnnotationService.php', true],
    'routing.loader.annotation.directory' => ['privates', 'routing.loader.annotation.directory', 'getRouting_Loader_Annotation_DirectoryService.php', true],
    'routing.loader.annotation.file' => ['privates', 'routing.loader.annotation.file', 'getRouting_Loader_Annotation_FileService.php', true],
    'routing.loader.directory' => ['privates', 'routing.loader.directory', 'getRouting_Loader_DirectoryService.php', true],
    'routing.loader.glob' => ['privates', 'routing.loader.glob', 'getRouting_Loader_GlobService.php', true],
    'routing.loader.php' => ['privates', 'routing.loader.php', 'getRouting_Loader_PhpService.php', true],
    'routing.loader.service' => ['privates', 'routing.loader.service', 'getRouting_Loader_ServiceService.php', true],
    'routing.loader.xml' => ['privates', 'routing.loader.xml', 'getRouting_Loader_XmlService.php', true],
    'routing.loader.yml' => ['privates', 'routing.loader.yml', 'getRouting_Loader_YmlService.php', true],
    'routing.resolver' => ['privates', 'routing.resolver', 'getRouting_ResolverService.php', true],
    'security.access.authenticated_voter' => ['privates', 'security.access.authenticated_voter', 'getSecurity_Access_AuthenticatedVoterService.php', true],
    'security.access.decision_manager' => ['privates', 'debug.security.access.decision_manager', 'getDebug_Security_Access_DecisionManagerService', false],
    'security.access.expression_voter' => ['privates', 'security.access.expression_voter', 'getSecurity_Access_ExpressionVoterService.php', true],
    'security.access.role_hierarchy_voter' => ['privates', 'security.access.role_hierarchy_voter', 'getSecurity_Access_RoleHierarchyVoterService.php', true],
    'security.access_listener' => ['privates', 'security.access_listener', 'getSecurity_AccessListenerService.php', true],
    'security.access_map' => ['privates', 'security.access_map', 'getSecurity_AccessMapService.php', true],
    'security.authentication.guard_handler' => ['privates', 'security.authentication.guard_handler', 'getSecurity_Authentication_GuardHandlerService.php', true],
    'security.authentication.listener.anonymous.main' => ['privates', 'security.authentication.listener.anonymous.main', 'getSecurity_Authentication_Listener_Anonymous_MainService.php', true],
    'security.authentication.listener.guard.main' => ['privates', 'security.authentication.listener.guard.main', 'getSecurity_Authentication_Listener_Guard_MainService.php', true],
    'security.authentication.manager' => ['privates', 'security.authentication.manager', 'getSecurity_Authentication_ManagerService', false],
    'security.authentication.provider.anonymous.main' => ['privates', 'security.authentication.provider.anonymous.main', 'getSecurity_Authentication_Provider_Anonymous_MainService.php', true],
    'security.authentication.provider.guard.main' => ['privates', 'security.authentication.provider.guard.main', 'getSecurity_Authentication_Provider_Guard_MainService.php', true],
    'security.authentication.retry_entry_point' => ['privates', 'security.authentication.retry_entry_point', 'getSecurity_Authentication_RetryEntryPointService.php', true],
    'security.authentication.session_strategy' => ['privates', 'security.authentication.session_strategy', 'getSecurity_Authentication_SessionStrategyService.php', true],
    'security.authentication.session_strategy.main' => ['privates', 'security.authentication.session_strategy', 'getSecurity_Authentication_SessionStrategyService.php', true],
    'security.authentication.switchuser_listener.main' => ['privates', 'security.authentication.switchuser_listener.main', 'getSecurity_Authentication_SwitchuserListener_MainService.php', true],
    'security.authentication.trust_resolver' => ['privates', 'security.authentication.trust_resolver', 'getSecurity_Authentication_TrustResolverService', false],
    'security.channel_listener' => ['privates', 'security.channel_listener', 'getSecurity_ChannelListenerService.php', true],
    'security.command.user_password_encoder' => ['privates', 'security.command.user_password_encoder', 'getSecurity_Command_UserPasswordEncoderService.php', true],
    'security.context_listener.0' => ['privates', 'security.context_listener.0', 'getSecurity_ContextListener_0Service.php', true],
    'security.csrf.token_generator' => ['privates', 'security.csrf.token_generator', 'getSecurity_Csrf_TokenGeneratorService.php', true],
    'security.csrf.token_storage' => ['privates', 'security.csrf.token_storage', 'getSecurity_Csrf_TokenStorageService.php', true],
    'security.encoder_factory' => ['privates', 'security.encoder_factory.generic', 'getSecurity_EncoderFactory_GenericService.php', true],
    'security.encoder_factory.generic' => ['privates', 'security.encoder_factory.generic', 'getSecurity_EncoderFactory_GenericService.php', true],
    'security.exception_listener.main' => ['privates', 'security.exception_listener.main', 'getSecurity_ExceptionListener_MainService.php', true],
    'security.expression_language' => ['privates', 'security.expression_language', 'getSecurity_ExpressionLanguageService.php', true],
    'security.firewall' => ['privates', 'debug.security.firewall', 'getDebug_Security_FirewallService', false],
    'security.firewall.map' => ['privates', 'security.firewall.map', 'getSecurity_Firewall_MapService', false],
    'security.firewall.map.config.dev' => ['privates', 'security.firewall.map.config.dev', 'getSecurity_Firewall_Map_Config_DevService.php', true],
    'security.firewall.map.config.main' => ['privates', 'security.firewall.map.config.main', 'getSecurity_Firewall_Map_Config_MainService.php', true],
    'security.firewall.map.context.dev' => ['privates', 'security.firewall.map.context.dev', 'getSecurity_Firewall_Map_Context_DevService.php', true],
    'security.firewall.map.context.main' => ['privates', 'security.firewall.map.context.main', 'getSecurity_Firewall_Map_Context_MainService.php', true],
    'security.helper' => ['privates', 'security.helper', 'getSecurity_HelperService.php', true],
    'security.http_utils' => ['privates', 'security.http_utils', 'getSecurity_HttpUtilsService.php', true],
    'security.logout.handler.csrf_token_clearing' => ['privates', 'security.logout.handler.csrf_token_clearing', 'getSecurity_Logout_Handler_CsrfTokenClearingService.php', true],
    'security.logout.handler.session' => ['privates', 'security.logout.handler.session', 'getSecurity_Logout_Handler_SessionService.php', true],
    'security.logout.success_handler.main' => ['privates', 'security.logout.success_handler.main', 'getSecurity_Logout_SuccessHandler_MainService.php', true],
    'security.logout_listener.main' => ['privates', 'security.logout_listener.main', 'getSecurity_LogoutListener_MainService.php', true],
    'security.logout_url_generator' => ['privates', 'security.logout_url_generator', 'getSecurity_LogoutUrlGeneratorService', false],
    'security.rememberme.response_listener' => ['privates', 'security.rememberme.response_listener', 'getSecurity_Rememberme_ResponseListenerService', false],
    'security.role_hierarchy' => ['privates', 'security.role_hierarchy', 'getSecurity_RoleHierarchyService', false],
    'security.user.provider.concrete.our_users' => ['privates', 'security.user.provider.concrete.our_users', 'getSecurity_User_Provider_Concrete_OurUsersService.php', true],
    'security.user_checker' => ['privates', 'security.user_checker', 'getSecurity_UserCheckerService.php', true],
    'security.user_checker.main' => ['privates', 'security.user_checker', 'getSecurity_UserCheckerService.php', true],
    'security.user_password_encoder.generic' => ['services', 'security.password_encoder', 'getSecurity_PasswordEncoderService.php', true],
    'security.user_value_resolver' => ['privates', 'security.user_value_resolver', 'getSecurity_UserValueResolverService.php', true],
    'security.validator.user_password' => ['privates', 'security.validator.user_password', 'getSecurity_Validator_UserPasswordService.php', true],
    'sensio_framework_extra.cache.listener' => ['privates', 'sensio_framework_extra.cache.listener', 'getSensioFrameworkExtra_Cache_ListenerService', false],
    'sensio_framework_extra.controller.listener' => ['privates', 'sensio_framework_extra.controller.listener', 'getSensioFrameworkExtra_Controller_ListenerService', false],
    'sensio_framework_extra.converter.doctrine.orm' => ['privates', 'sensio_framework_extra.converter.doctrine.orm', 'getSensioFrameworkExtra_Converter_Doctrine_OrmService', false],
    'sensio_framework_extra.converter.doctrine.orm.expression_language' => ['privates', 'sensio_framework_extra.converter.doctrine.orm.expression_language.default', 'getSensioFrameworkExtra_Converter_Doctrine_Orm_ExpressionLanguage_DefaultService', false],
    'sensio_framework_extra.converter.doctrine.orm.expression_language.default' => ['privates', 'sensio_framework_extra.converter.doctrine.orm.expression_language.default', 'getSensioFrameworkExtra_Converter_Doctrine_Orm_ExpressionLanguage_DefaultService', false],
    'sensio_framework_extra.converter.listener' => ['privates', 'sensio_framework_extra.converter.listener', 'getSensioFrameworkExtra_Converter_ListenerService', false],
    'sensio_framework_extra.converter.manager' => ['privates', 'sensio_framework_extra.converter.manager', 'getSensioFrameworkExtra_Converter_ManagerService', false],
    'sensio_framework_extra.routing.loader.annot_class' => ['privates', 'sensio_framework_extra.routing.loader.annot_class', 'getSensioFrameworkExtra_Routing_Loader_AnnotClassService.php', true],
    'sensio_framework_extra.routing.loader.annot_dir' => ['privates', 'sensio_framework_extra.routing.loader.annot_dir', 'getSensioFrameworkExtra_Routing_Loader_AnnotDirService.php', true],
    'sensio_framework_extra.routing.loader.annot_file' => ['privates', 'sensio_framework_extra.routing.loader.annot_file', 'getSensioFrameworkExtra_Routing_Loader_AnnotFileService.php', true],
    'sensio_framework_extra.security.expression_language' => ['privates', 'sensio_framework_extra.security.expression_language.default', 'getSensioFrameworkExtra_Security_ExpressionLanguage_DefaultService', false],
    'sensio_framework_extra.security.expression_language.default' => ['privates', 'sensio_framework_extra.security.expression_language.default', 'getSensioFrameworkExtra_Security_ExpressionLanguage_DefaultService', false],
    'sensio_framework_extra.security.listener' => ['privates', 'sensio_framework_extra.security.listener', 'getSensioFrameworkExtra_Security_ListenerService', false],
    'sensio_framework_extra.view.guesser' => ['privates', 'sensio_framework_extra.view.guesser', 'getSensioFrameworkExtra_View_GuesserService', false],
    'sensio_framework_extra.view.listener' => ['privates', 'sensio_framework_extra.view.listener', 'getSensioFrameworkExtra_View_ListenerService', false],
    'session.attribute_bag' => ['privates', 'session.attribute_bag', 'getSession_AttributeBagService.php', true],
    'session.flash_bag' => ['privates', 'session.flash_bag', 'getSession_FlashBagService.php', true],
    'session.storage' => ['privates', 'session.storage.mock_file', 'getSession_Storage_MockFileService.php', true],
    'session.storage.filesystem' => ['privates', 'session.storage.mock_file', 'getSession_Storage_MockFileService.php', true],
    'session.storage.metadata_bag' => ['privates', 'session.storage.metadata_bag', 'getSession_Storage_MetadataBagService.php', true],
    'session.storage.mock_file' => ['privates', 'session.storage.mock_file', 'getSession_Storage_MockFileService.php', true],
    'session_listener' => ['privates', 'session_listener', 'getSessionListenerService', false],
    'stof_doctrine_extensions.listener.sluggable' => ['privates', 'stof_doctrine_extensions.listener.sluggable', 'getStofDoctrineExtensions_Listener_SluggableService.php', true],
    'streamed_response_listener' => ['privates', 'streamed_response_listener', 'getStreamedResponseListenerService', false],
    'swiftmailer.command.debug' => ['privates', 'swiftmailer.command.debug', 'getSwiftmailer_Command_DebugService.php', true],
    'swiftmailer.command.new_email' => ['privates', 'swiftmailer.command.new_email', 'getSwiftmailer_Command_NewEmailService.php', true],
    'swiftmailer.command.send_email' => ['privates', 'swiftmailer.command.send_email', 'getSwiftmailer_Command_SendEmailService.php', true],
    'swiftmailer.email_sender.listener' => ['privates', 'swiftmailer.email_sender.listener', 'getSwiftmailer_EmailSender_ListenerService.php', true],
    'swiftmailer.mailer' => ['services', 'swiftmailer.mailer.default', 'getSwiftmailer_Mailer_DefaultService.php', true],
    'swiftmailer.mailer.default.spool' => ['privates', 'swiftmailer.mailer.default.spool.memory', 'getSwiftmailer_Mailer_Default_Spool_MemoryService.php', true],
    'swiftmailer.mailer.default.spool.memory' => ['privates', 'swiftmailer.mailer.default.spool.memory', 'getSwiftmailer_Mailer_Default_Spool_MemoryService.php', true],
    'swiftmailer.mailer.default.transport' => ['services', 'swiftmailer.transport', 'getSwiftmailer_TransportService.php', true],
    'swiftmailer.mailer.default.transport.dynamic' => ['services', 'swiftmailer.mailer.default.transport.real', 'getSwiftmailer_Mailer_Default_Transport_RealService.php', true],
    'swiftmailer.mailer.default.transport.eventdispatcher' => ['privates', 'swiftmailer.mailer.default.transport.eventdispatcher', 'getSwiftmailer_Mailer_Default_Transport_EventdispatcherService.php', true],
    'swiftmailer.mailer.default.transport.spool' => ['services', 'swiftmailer.transport', 'getSwiftmailer_TransportService.php', true],
    'swiftmailer.plugin.messagelogger' => ['services', 'swiftmailer.mailer.default.plugin.messagelogger', 'getSwiftmailer_Mailer_Default_Plugin_MessageloggerService.php', true],
    'swiftmailer.spool' => ['privates', 'swiftmailer.mailer.default.spool.memory', 'getSwiftmailer_Mailer_Default_Spool_MemoryService.php', true],
    'swiftmailer.transport.real' => ['services', 'swiftmailer.mailer.default.transport.real', 'getSwiftmailer_Mailer_Default_Transport_RealService.php', true],
    'test.session.listener' => ['privates', 'test.session.listener', 'getTest_Session_ListenerService', false],
    'translation.dumper.csv' => ['privates', 'translation.dumper.csv', 'getTranslation_Dumper_CsvService.php', true],
    'translation.dumper.ini' => ['privates', 'translation.dumper.ini', 'getTranslation_Dumper_IniService.php', true],
    'translation.dumper.json' => ['privates', 'translation.dumper.json', 'getTranslation_Dumper_JsonService.php', true],
    'translation.dumper.mo' => ['privates', 'translation.dumper.mo', 'getTranslation_Dumper_MoService.php', true],
    'translation.dumper.php' => ['privates', 'translation.dumper.php', 'getTranslation_Dumper_PhpService.php', true],
    'translation.dumper.po' => ['privates', 'translation.dumper.po', 'getTranslation_Dumper_PoService.php', true],
    'translation.dumper.qt' => ['privates', 'translation.dumper.qt', 'getTranslation_Dumper_QtService.php', true],
    'translation.dumper.res' => ['privates', 'translation.dumper.res', 'getTranslation_Dumper_ResService.php', true],
    'translation.dumper.xliff' => ['privates', 'translation.dumper.xliff', 'getTranslation_Dumper_XliffService.php', true],
    'translation.dumper.yaml' => ['privates', 'translation.dumper.yaml', 'getTranslation_Dumper_YamlService.php', true],
    'translation.dumper.yml' => ['privates', 'translation.dumper.yml', 'getTranslation_Dumper_YmlService.php', true],
    'translation.extractor' => ['privates', 'translation.extractor', 'getTranslation_ExtractorService.php', true],
    'translation.extractor.php' => ['privates', 'translation.extractor.php', 'getTranslation_Extractor_PhpService.php', true],
    'translation.loader.csv' => ['privates', 'translation.loader.csv', 'getTranslation_Loader_CsvService.php', true],
    'translation.loader.dat' => ['privates', 'translation.loader.dat', 'getTranslation_Loader_DatService.php', true],
    'translation.loader.ini' => ['privates', 'translation.loader.ini', 'getTranslation_Loader_IniService.php', true],
    'translation.loader.json' => ['privates', 'translation.loader.json', 'getTranslation_Loader_JsonService.php', true],
    'translation.loader.mo' => ['privates', 'translation.loader.mo', 'getTranslation_Loader_MoService.php', true],
    'translation.loader.php' => ['privates', 'translation.loader.php', 'getTranslation_Loader_PhpService.php', true],
    'translation.loader.po' => ['privates', 'translation.loader.po', 'getTranslation_Loader_PoService.php', true],
    'translation.loader.qt' => ['privates', 'translation.loader.qt', 'getTranslation_Loader_QtService.php', true],
    'translation.loader.res' => ['privates', 'translation.loader.res', 'getTranslation_Loader_ResService.php', true],
    'translation.loader.xliff' => ['privates', 'translation.loader.xliff', 'getTranslation_Loader_XliffService.php', true],
    'translation.loader.yml' => ['privates', 'translation.loader.yml', 'getTranslation_Loader_YmlService.php', true],
    'translation.reader' => ['privates', 'translation.reader', 'getTranslation_ReaderService.php', true],
    'translation.warmer' => ['privates', 'translation.warmer', 'getTranslation_WarmerService.php', true],
    'translation.writer' => ['privates', 'translation.writer', 'getTranslation_WriterService.php', true],
    'translator.default' => ['services', 'translator', 'getTranslatorService', false],
    'translator.formatter' => ['privates', 'translator.formatter.default', 'getTranslator_Formatter_DefaultService', false],
    'translator.formatter.default' => ['privates', 'translator.formatter.default', 'getTranslator_Formatter_DefaultService', false],
    'translator_listener' => ['privates', 'translator_listener', 'getTranslatorListenerService', false],
    'twig.app_variable' => ['privates', 'twig.app_variable', 'getTwig_AppVariableService', false],
    'twig.command.debug' => ['privates', 'twig.command.debug', 'getTwig_Command_DebugService.php', true],
    'twig.command.lint' => ['privates', 'twig.command.lint', 'getTwig_Command_LintService.php', true],
    'twig.configurator.environment' => ['privates', 'twig.configurator.environment', 'getTwig_Configurator_EnvironmentService', false],
    'twig.exception_listener' => ['privates', 'twig.exception_listener', 'getTwig_ExceptionListenerService.php', true],
    'twig.extension.assets' => ['privates', 'twig.extension.assets', 'getTwig_Extension_AssetsService', false],
    'twig.extension.code' => ['privates', 'twig.extension.code', 'getTwig_Extension_CodeService', false],
    'twig.extension.debug' => ['privates', 'twig.extension.debug', 'getTwig_Extension_DebugService', false],
    'twig.extension.exercise.twig' => ['privates', 'twig.extension.exercise.twig', 'getTwig_Extension_Exercise_TwigService', false],
    'twig.extension.expression' => ['privates', 'twig.extension.expression', 'getTwig_Extension_ExpressionService', false],
    'twig.extension.form' => ['privates', 'twig.extension.form', 'getTwig_Extension_FormService', false],
    'twig.extension.httpfoundation' => ['privates', 'twig.extension.httpfoundation', 'getTwig_Extension_HttpfoundationService', false],
    'twig.extension.httpkernel' => ['privates', 'twig.extension.httpkernel', 'getTwig_Extension_HttpkernelService', false],
    'twig.extension.logout_url' => ['privates', 'twig.extension.logout_url', 'getTwig_Extension_LogoutUrlService', false],
    'twig.extension.profiler' => ['privates', 'twig.extension.profiler', 'getTwig_Extension_ProfilerService', false],
    'twig.extension.routing' => ['privates', 'twig.extension.routing', 'getTwig_Extension_RoutingService', false],
    'twig.extension.security' => ['privates', 'twig.extension.security', 'getTwig_Extension_SecurityService', false],
    'twig.extension.security_csrf' => ['privates', 'twig.extension.security_csrf', 'getTwig_Extension_SecurityCsrfService', false],
    'twig.extension.trans' => ['privates', 'twig.extension.trans', 'getTwig_Extension_TransService', false],
    'twig.extension.yaml' => ['privates', 'twig.extension.yaml', 'getTwig_Extension_YamlService', false],
    'twig.form.engine' => ['privates', 'twig.form.engine', 'getTwig_Form_EngineService.php', true],
    'twig.form.renderer' => ['privates', 'twig.form.renderer', 'getTwig_Form_RendererService.php', true],
    'twig.loader' => ['privates', 'twig.loader.native_filesystem', 'getTwig_Loader_NativeFilesystemService', false],
    'twig.loader.filesystem' => ['privates', 'twig.loader.native_filesystem', 'getTwig_Loader_NativeFilesystemService', false],
    'twig.loader.native_filesystem' => ['privates', 'twig.loader.native_filesystem', 'getTwig_Loader_NativeFilesystemService', false],
    'twig.profile' => ['privates', 'twig.profile', 'getTwig_ProfileService', false],
    'twig.runtime.httpkernel' => ['privates', 'twig.runtime.httpkernel', 'getTwig_Runtime_HttpkernelService.php', true],
    'twig.runtime.security_csrf' => ['privates', 'twig.runtime.security_csrf', 'getTwig_Runtime_SecurityCsrfService.php', true],
    'twig.runtime_loader' => ['privates', 'twig.runtime_loader', 'getTwig_RuntimeLoaderService', false],
    'twig.translation.extractor' => ['privates', 'twig.translation.extractor', 'getTwig_Translation_ExtractorService.php', true],
    'uri_signer' => ['privates', 'uri_signer', 'getUriSignerService', false],
    'validate_request_listener' => ['privates', 'validate_request_listener', 'getValidateRequestListenerService', false],
    'validator.builder' => ['privates', 'validator.builder', 'getValidator_BuilderService.php', true],
    'validator.email' => ['privates', 'validator.email', 'getValidator_EmailService.php', true],
    'validator.expression' => ['privates', 'validator.expression', 'getValidator_ExpressionService.php', true],
    'validator.mapping.cache_warmer' => ['privates', 'validator.mapping.cache_warmer', 'getValidator_Mapping_CacheWarmerService.php', true],
    'validator.mapping.class_metadata_factory' => ['services', 'validator', 'getValidatorService.php', true],
    'validator.validator_factory' => ['privates', 'validator.validator_factory', 'getValidator_ValidatorFactoryService.php', true],
    'webpack_encore.entrypoint_lookup' => ['privates', 'webpack_encore.entrypoint_lookup', 'getWebpackEncore_EntrypointLookupService.php', true],
    'webpack_encore.entrypoint_lookup[_default]' => ['privates', 'webpack_encore.entrypoint_lookup[_default]', 'getWebpackEncore_EntrypointLookupDefaultService.php', true],
    'webpack_encore.entrypoint_lookup_collection' => ['privates', 'webpack_encore.entrypoint_lookup_collection', 'getWebpackEncore_EntrypointLookupCollectionService.php', true],
    'webpack_encore.tag_renderer' => ['privates', 'webpack_encore.tag_renderer', 'getWebpackEncore_TagRendererService.php', true],
    'webpack_encore.twig_entry_files_extension' => ['privates', 'webpack_encore.twig_entry_files_extension', 'getWebpackEncore_TwigEntryFilesExtensionService', false],
]);
