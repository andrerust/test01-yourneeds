<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'doctrine.orm.container_repository_factory' shared service.

include_once $this->targetDirs[3].'/vendor/doctrine/orm/lib/Doctrine/ORM/Repository/RepositoryFactory.php';
include_once $this->targetDirs[3].'/vendor/doctrine/doctrine-bundle/Repository/ContainerRepositoryFactory.php';

return $this->privates['doctrine.orm.container_repository_factory'] = new \Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'AppBundle\\Repository\\DocumentRepository' => ['privates', 'AppBundle\\Repository\\DocumentRepository', 'getDocumentRepositoryService.php', true],
    'AppBundle\\Repository\\DocumentTypeRepository' => ['privates', 'AppBundle\\Repository\\DocumentTypeRepository', 'getDocumentTypeRepositoryService.php', true],
    'AppBundle\\Repository\\FaqQuestionRepository' => ['privates', 'AppBundle\\Repository\\FaqQuestionRepository', 'getFaqQuestionRepositoryService.php', true],
    'AppBundle\\Repository\\MediaRepository' => ['privates', 'AppBundle\\Repository\\MediaRepository', 'getMediaRepositoryService.php', true],
    'AppBundle\\Repository\\MediaTypeRepository' => ['privates', 'AppBundle\\Repository\\MediaTypeRepository', 'getMediaTypeRepositoryService.php', true],
    'AppBundle\\Repository\\MessageRepository' => ['privates', 'AppBundle\\Repository\\MessageRepository', 'getMessageRepositoryService.php', true],
    'AppBundle\\Repository\\MessageTypeRepository' => ['privates', 'AppBundle\\Repository\\MessageTypeRepository', 'getMessageTypeRepositoryService.php', true],
    'AppBundle\\Repository\\ProjectRepository' => ['privates', 'AppBundle\\Repository\\ProjectRepository', 'getProjectRepositoryService.php', true],
    'Main\\AdminBundle\\Repository\\AnimalDogBreedRepository' => ['privates', 'Main\\AdminBundle\\Repository\\AnimalDogBreedRepository', 'getAnimalDogBreedRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\CompanyRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\CompanyRepository', 'getCompanyRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\ContractRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\ContractRepository', 'getContractRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\DamageDocumentRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\DamageDocumentRepository', 'getDamageDocumentRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\DamageMediaRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\DamageMediaRepository', 'getDamageMediaRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\DamageRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\DamageRepository', 'getDamageRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\MMContractRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\MMContractRepository', 'getMMContractRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\ProcessActivityRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\ProcessActivityRepository', 'getProcessActivityRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\ProcessRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\ProcessRepository', 'getProcessRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\ProcessStatusRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\ProcessStatusRepository', 'getProcessStatusRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\ProcessTariffTrackerRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\ProcessTariffTrackerRepository', 'getProcessTariffTrackerRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\ProcessTypeRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\ProcessTypeRepository', 'getProcessTypeRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\StructureRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\StructureRepository', 'getStructureRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\SurveyQuestionRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\SurveyQuestionRepository', 'getSurveyQuestionRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\TargetGroupRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\TargetGroupRepository', 'getTargetGroupRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\TariffRateRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\TariffRateRepository', 'getTariffRateRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\TariffRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\TariffRepository', 'getTariffRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\TariffTargetGroupRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\TariffTargetGroupRepository', 'getTariffTargetGroupRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\TariffTypeRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\TariffTypeRepository', 'getTariffTypeRepositoryService.php', true],
    'Main\\InsuranceBundle\\Repository\\TypeRepository' => ['privates', 'Main\\InsuranceBundle\\Repository\\TypeRepository', 'getTypeRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\AchievementRepository' => ['privates', 'Main\\UserBundle\\Repository\\AchievementRepository', 'getAchievementRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\ActivityRepository' => ['privates', 'Main\\UserBundle\\Repository\\ActivityRepository', 'getActivityRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\AddressRepository' => ['privates', 'Main\\UserBundle\\Repository\\AddressRepository', 'getAddressRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\AddressTypeRepository' => ['privates', 'Main\\UserBundle\\Repository\\AddressTypeRepository', 'getAddressTypeRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\BankAccountRepository' => ['privates', 'Main\\UserBundle\\Repository\\BankAccountRepository', 'getBankAccountRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\BenefitPartnerRepository' => ['privates', 'Main\\UserBundle\\Repository\\BenefitPartnerRepository', 'getBenefitPartnerRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\CityRepository' => ['privates', 'Main\\UserBundle\\Repository\\CityRepository', 'getCityRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\CountryRepository' => ['privates', 'Main\\UserBundle\\Repository\\CountryRepository', 'getCountryRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\FamilyStatusRepository' => ['privates', 'Main\\UserBundle\\Repository\\FamilyStatusRepository', 'getFamilyStatusRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\JobGroupRepository' => ['privates', 'Main\\UserBundle\\Repository\\JobGroupRepository', 'getJobGroupRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\TitleRepository' => ['privates', 'Main\\UserBundle\\Repository\\TitleRepository', 'getTitleRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\UserActivityRepository' => ['privates', 'Main\\UserBundle\\Repository\\UserActivityRepository', 'getUserActivityRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\UserMediaRepository' => ['privates', 'Main\\UserBundle\\Repository\\UserMediaRepository', 'getUserMediaRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\UserProjectRepository' => ['privates', 'Main\\UserBundle\\Repository\\UserProjectRepository', 'getUserProjectRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\UserRepository' => ['privates', 'Main\\UserBundle\\Repository\\UserRepository', 'getUserRepositoryService.php', true],
    'Main\\UserBundle\\Repository\\UserSecurityLogRepository' => ['privates', 'Main\\UserBundle\\Repository\\UserSecurityLogRepository', 'getUserSecurityLogRepositoryService.php', true],
]));
