/* YOURneeds manager module */

.tabs {
  display: table;
  width: 100%;
  margin: 5px;
}

.tabs:after {
  content: "";
  display: block;
  width: 100%;
  clear: both;
}

.tabs ul {
  list-style: none;
  display: table-row;
}

.tabs ul li {
  display: table-cell;
}

.tabs ul li i {
  color: #6fbc85;
}

.tabs ul li a {
  -o-transition: all 0.25s linear;
  -ms-transition: all 0.25s linear;
  -moz-transition: all 0.25s linear;
  -webkit-transition: all 0.25s linear;
  transition: all 0.25s linear;
}

.tabs ul li a:link {
  font-weight: bolder;
  white-space: nowrap;
  text-overflow: ellipsis;
  display: block;
  text-align: center;
  text-transform: capitalize;
  text-decoration: none;
  min-width: 5em;
  max-width: 20em;
  color: #c0b8b0;
  margin: 0 0 0 0;
}

.tabs ul li a.active {
  position: relative;
  border-bottom: 0.25em solid #6fbc85;
  background: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(70%, white), color-stop(100%, #39b3d7));
  background: -moz-linear-gradient(top, white 70%, #39b3d7 100%);
  background: -webkit-linear-gradient(top, white 70%, #39b3d7 100%);
  background: linear-gradient(to bottom, white 70%, #39b3d7 100%);
}

.tabs ul li a.active:after {
  content: "";
  display: block;
  border-color: #6fbc85;
  border-width: .75em .75em 0 .75em;
  border-style: solid;
  width: 0;
  height: 0;
  position: absolute;
  bottom: -.75em;
  left: 50%;
  margin-left: -.75em;
  z-index: 1;
}

.attribute-list-entry {
  font-size: 12px;
  padding-bottom: 3px;
}

.icon-frame {
  border-radius: 50px;
  width: 20px;
  height: 20px;
  position: relative;
  border: 1px solid #6fbc85;
  left: 1px;
  top: 0;
  border-radius: 50px;
  float: left;
}

.icon-frame.check {
  border: 1px solid #6fbc85;
  border-radius: 50px;
}

.icon-frame.times {
  border: 1px solid #d43f3a;
  border-radius: 50px;
}

.icon-frame .fa-check {
  position: relative;
  top: -1px;
  left: 3px;
}

.icon-frame .fa-star {
  position: relative;
  left: 3px;
  top: 0;
  color: #6fbc85;
}

.icon-frame .fa-minus {
  position: relative;
  left: 4px;
  top: 0;
}

.fa-check {
  position: relative;
  left: 3px;
  top: 1px;
}

#insurance_name_cheapest {
  padding-top: 10px;
}

.col-3 {
  margin: 0;
  padding: 0;
}

.company-logo-img-box {
  height: 50px;
}

.img {
  width: auto;
  height: 45px;
}

.result-header-row {
  height: 45px;
}

.wrapper {
  position: relative;
  width: 640px;
  height: 480px;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.signature-pad {
  width: 640px;
  height: 480px;
  border: 1px dotted #6fbc85;
}

.profile-image {
  border-radius: 5px;
  border: 1px solid #c0b8b0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.col-menu {
  -moz-box-shadow: 0 0 15px #b19f9e;
  -webkit-box-shadow: 0 0 15px #b19f9e;
  box-shadow: 0 0 15px #b19f9e;
  -o-transition: all 0.25s linear;
  -ms-transition: all 0.25s linear;
  -moz-transition: all 0.25s linear;
  -webkit-transition: all 0.25s linear;
  transition: all 0.25s linear;
  display: table-cell;
  background-color: #fff;
  left: 0;
  top: 0;
  height: 100%;
  z-index: 150;
  overflow-x: scroll;
  padding-top: 12.5px;
  padding-bottom: 12.5px;
}

@media (max-width: 575.98px) {
  .col-menu {
    position: fixed;
    width: 100%;
    font-size: 21px;
    line-height: 32px;
  }
}

.col-menu.col-menu--small {
  text-align: center;
}

@media (max-width: 575.98px) {
  .col-menu.col-menu--small {
    display: none;
  }
}

.col-menu.col-menu--small > .content-menu {
  max-width: 30px;
  padding-left: 5px;
  padding-right: 5px;
}

.col-menu.col-menu--small .description {
  display: none;
}

.col-menu .nav a {
  width: 100%;
  margin-top: 5px;
  margin-bottom: 5px;
}

.col-menu .nav a:hover {
  border-bottom-color: transparent;
}

.col-menu .icon,
.col-menu .description {
  display: table-cell;
}

.col-menu .description {
  padding-left: 5px;
}

.col-menu .square {
  max-width: 100px;
  max-height: 100px;
}

.content-body,
.col-menu {
  display: table-cell;
}

.content-menu {
  -o-transition: all 0.25s linear;
  -ms-transition: all 0.25s linear;
  -moz-transition: all 0.25s linear;
  -webkit-transition: all 0.25s linear;
  transition: all 0.25s linear;
  max-width: 20em;
  width: 20em;
}

@media (max-width: 575.98px) {
  .content-menu {
    max-width: 100%;
    padding-left: 1em;
    padding-right: 1em;
  }
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/